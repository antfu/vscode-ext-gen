// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info

import { defineConfigObject, defineConfigs } from 'reactive-vscode'

export const publisher = "antfu"
export const name = "smart-clicks"
export const version = "0.2.0"
export const displayName = "Smart Clicks"
export const description = "Smart selection with double clicks"
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey = 
  | "smartClicks.trigger"

/**
 * Commands map registed by `antfu.smart-clicks`
 */
export const commands = {
  /**
   * Smart Clicks: Trigger
   * @value `smartClicks.trigger`
   * @example
   * useCommand(commands.trigger, async () => {
   *   //do actions or update config 
   * })
   */
  trigger: "smartClicks.trigger",
} satisfies Record<string, CommandKey>

/**
 * Type union of all configs
 */

/**
 * Config keys of `smartClicks`
 */
export interface SmartClicks {
  /**
   * The interval between clicks in milliseconds.
   * @key `smartClicks.clicksInterval`
   * @default `600`
   * @type `number`
   */
  "clicksInterval": number,
  /**
   * The delay after triggering the selection. To prevent conflicting with normal selection.
   * @key `smartClicks.triggerDelay`
   * @default `150`
   * @type `number`
   */
  "triggerDelay": number,
  /**
   * Array of language IDs to enable html smartClicks
   * @key `smartClicks.htmlLanguageIds`
   * @default `["html","vue","svelte"]`
   * @type `array`
   */
  "htmlLanguageIds": string[],
  /**
   * Rule toggles
   * @key `smartClicks.rules`
   * @default `{ "bracket-pair": true, "dash": true, "html-attr": true, "html-element": true, "html-tag-pair": true, "js-arrow-fn": true, "js-assign": true, "js-block": false, "js-colon": true, "jsx-tag-pair": true }`
   * @type `object`
   */
  "rules": { 'bracket-pair': boolean; 'dash': boolean; 'html-attr': boolean; 'html-element': boolean; 'html-tag-pair': boolean; 'js-arrow-fn': boolean; 'js-assign': boolean; 'js-block': boolean; 'js-colon': boolean; 'jsx-tag-pair': boolean },
}

/**
 * Scoped defaults of `smartClicks`
 */
const _smartClicks = {
/**
 * scope: `smartClicks`
 */
  scope: "smartClicks",
/**
 * Keys' defaults of `smartClicks`
 */
  defaults: {
    "clicksInterval": 600,
    "triggerDelay": 150,
    "htmlLanguageIds": ["html","vue","svelte"],
    "rules": { "bracket-pair": true, "dash": true, "html-attr": true, "html-element": true, "html-tag-pair": true, "js-arrow-fn": true, "js-assign": true, "js-block": false, "js-colon": true, "jsx-tag-pair": true },
  } satisfies SmartClicks,
}

/**
 * Reactive ConfigObject of `smartClicks`
 * @example
 * let configValue = smartClicksConfigObject.clicksInterval //get value 
 * smartClicksConfigObject.clicksInterval = true // set value
 * smartClicksConfigObject.$update("clicksInterval", !configValue, ConfigurationTarget.Workspace, true)
 */
export const smartClicksConfigObject = defineConfigObject<SmartClicks>(
  _smartClicks.scope,
  _smartClicks.defaults
)
/**
 * Reactive ToConfigRefs of `smartClicks`
 * @example
 * let configValue:number =smartClicksConfigs.clicksInterval.value //get value 
 * smartClicksConfigs.clicksInterval.value = 600 // set value
 * //update value to ConfigurationTarget.Workspace/ConfigurationTarget.Global/ConfigurationTarget.WorkspaceFolder
 * smartClicksConfigs.clicksInterval.update(true, ConfigurationTarget.WorkspaceFolder, true)
 */
export const smartClicksConfigs = defineConfigs<SmartClicks>(
  _smartClicks.scope,
  _smartClicks.defaults
)
